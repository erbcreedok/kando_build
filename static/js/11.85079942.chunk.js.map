{"version":3,"sources":["pages/NotFoundPage.js","components/Player.js","hooks/useQuery.js","helpers/getDefaultEpisode.js","helpers/getAnimeEpisodeById.js","pages/WatchPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/modifyClass.js","layouts/FullScreenLayout.js"],"names":["NotFoundPage","location","useLocation","url","Player","media","iframe","video","className","src","title","width","height","allowFullScreen","autoPlay","controls","useQuery","param","URLSearchParams","search","get","getDefaultEpisodeId","anime","episodes","episodeId","movie","id","getAnimeEpisodeById","episode","find","season","e","WatchPage","history","useHistory","animeId","useParams","getAnimeById","useState","setMedia","useEffect","push","FullScreenLayout","withHeader","IconButton","componentClass","Link","to","size","icon","Icon","appearance","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","modifyClass","modifiers","concatClassModifiers","concat","keys","filter","key","children","useLayoutClass"],"mappings":"oGAAA,kCAeeA,UAZf,WACE,IAAMC,EAAWC,cACjB,OACE,oCACE,+CACA,4BACE,2BAAID,EAASE,KADf,sB,4ECOSC,MAbf,YAA4B,IAAVC,EAAS,EAATA,MACVC,EAASD,EAAMC,OACfC,EAAQF,EAAME,MACpB,OACE,yBAAKC,UAAU,UACZF,IAAWC,GAAU,4BAAQE,IAAKH,EAAQE,UAAU,iBAAiBE,MAAM,QAAQC,MAAM,OAAOC,OAAO,OAAOC,iBAAe,IAC7HN,GACC,2BAAOE,IAAKF,EAAOC,UAAU,iBAAiBG,MAAM,OAAOC,OAAO,OAAOE,UAAQ,EAACC,UAAQ,M,gBCFnFC,MALf,SAAkBC,GAEhB,OADe,IAAIC,gBAAgBhB,cAAciB,QACnCC,IAAIH,ICGLI,MAPf,SAA6BC,GAC3B,OAAKA,EAAMC,SAGJD,EAAMC,SAAS,GAAGA,SAAS,GAAGC,UAF5BF,EAAMG,MAAMC,ICYRC,MAdf,SAA6BL,EAAOE,GAClC,IAAII,EAAU,KAUd,OATAN,EAAMC,SAASM,MAAK,SAACC,GACnB,OAAOA,EAAOP,SAASM,MAAK,SAACE,GAC3B,OAAIA,EAAEP,YAAcA,IAClBI,EAAUG,GACH,SAKNH,G,kCCmCMI,UAlCf,WACE,IAAMC,EAAUC,cACVC,EAAUC,cAAYV,GACtBF,EAAYR,EAAS,WACrBM,EAAQe,YAAaF,GAJR,EAKOG,mBAAS,MALhB,mBAKZjC,EALY,KAKLkC,EALK,KAoBnB,OAbAC,qBAAU,WACR,GAAKlB,EACL,GAAIA,EAAMC,WAAaC,EAAW,CAChC,IAAMA,EAAYH,EAAoBC,GACtCW,EAAQQ,KAAR,mBAAyBjB,SACpB,GAAIF,EAAMC,SAAU,CACzB,IAAMK,EAAUD,EAAoBL,EAAOE,GAC3Ce,EAASX,EAAQvB,YAEjBkC,EAASjB,EAAMjB,SAEhB,CAACiB,EAAOE,EAAWS,IAEjB5B,EAKH,kBAACqC,EAAA,EAAD,CAAkBC,YAAU,GAC1B,kBAAC,EAAD,CAAQtC,MAAOA,IACf,yBAAKG,UAAU,4BACb,kBAACoC,EAAA,EAAD,CAAYC,eAAgBC,IAAMC,GAAI,UAAYZ,EAASa,KAAK,KAAKC,KAAM,kBAACC,EAAA,EAAD,CAAMD,KAAK,QAAQD,KAAK,OAASG,WAAW,aAPpH,kBAACnD,EAAA,QAAD,Q,0FC7BI,SAASoD,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,oDII/EC,IAPf,SAAqBxD,EAAWyD,GAC9B,OAAOC,IAAoB,WAApB,GACL1D,GADK2D,OAAA,YAEFP,OAAOQ,KAAKH,GAAWI,QAAO,SAACC,GAAD,OAASL,EAAUK,W,gCCLxD,4CAiBe5B,IAZf,YAAsD,IAA1BC,EAAyB,EAAzBA,WAAa4B,EAAY,EAAZA,SAEvC,OADAC,YAAe,sBAEb,yBAAKhE,UAAU,+BACZmC,GAAc,kBAAC,IAAD,MACf,yBAAKnC,UAAWwD,YAAY,8BAA+B,CAAC,YAAerB,KACxE4B","file":"static/js/11.85079942.chunk.js","sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router'\n\nfunction NotFoundPage() {\n  const location = useLocation()\n  return (\n    <>\n      <h1>404 - Not Found</h1>\n      <h2>\n        <i>{location.url}</i> page not found\n      </h2>\n    </>\n  )\n}\n\nexport default NotFoundPage\n","import React  from 'react'\n\nfunction Player({ media }) {\n  const iframe = media.iframe\n  const video = media.video\n  return (\n    <div className='player'>\n      {iframe && !video && (<iframe src={iframe} className='player__iframe' title='anime' width='100%' height='100%' allowFullScreen />)}\n      {video && (\n        <video src={video} className='player__player' width='100%' height='100%' autoPlay controls />\n      )}\n    </div>\n  )\n}\n\nexport default Player\n","import { useLocation } from 'react-router'\n\nfunction useQuery(param) {\n  const search = new URLSearchParams(useLocation().search)\n  return search.get(param)\n}\n\nexport default useQuery\n","function getDefaultEpisodeId(anime) {\n  if (!anime.episodes) {\n    return anime.movie.id\n  }\n  return anime.episodes[0].episodes[0].episodeId\n}\n\nexport default getDefaultEpisodeId\n","function getAnimeEpisodeById(anime, episodeId) {\n  let episode = null\n  anime.episodes.find((season) => {\n    return season.episodes.find((e) => {\n      if (e.episodeId === episodeId) {\n        episode = e\n        return true\n      }\n      return false\n    })\n  })\n  return episode\n}\n\nexport default getAnimeEpisodeById\n","import React, { useEffect, useState } from 'react'\nimport { getAnimeById } from '../localServer/localDatabase/animes.js'\nimport Player from '../components/Player.js'\nimport NotFoundPage from './NotFoundPage.js'\nimport useQuery from '../hooks/useQuery.js'\nimport { useHistory, useParams } from 'react-router'\nimport getDefaultEpisodeId from '../helpers/getDefaultEpisode.js'\nimport getAnimeEpisodeById from '../helpers/getAnimeEpisodeById.js'\nimport FullScreenLayout from '../layouts/FullScreenLayout.js'\nimport { Icon, IconButton } from 'rsuite'\nimport { Link } from 'react-router-dom'\n\nfunction WatchPage() {\n  const history = useHistory()\n  const animeId = useParams().id\n  const episodeId = useQuery('episode')\n  const anime = getAnimeById(animeId)\n  const [media, setMedia] = useState(null)\n\n  useEffect(() => {\n    if (!anime) return\n    if (anime.episodes && !episodeId) {\n      const episodeId = getDefaultEpisodeId(anime)\n      history.push(`?episode=${episodeId}`)\n    } else if (anime.episodes) {\n      const episode = getAnimeEpisodeById(anime, episodeId)\n      setMedia(episode.media)\n    } else {\n      setMedia(anime.media)\n    }\n  }, [anime, episodeId, history])\n\n  if (!media) {\n    return <NotFoundPage />\n  }\n\n  return (\n    <FullScreenLayout withHeader>\n      <Player media={media} />\n      <div className=\"watch_page__close_button\">\n        <IconButton componentClass={Link} to={'/anime/' + animeId} size='lg' icon={<Icon icon='close' size='2x' />} appearance='subtle' />\n      </div>\n    </FullScreenLayout>\n  )\n}\n\nexport default WatchPage\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import concatClassModifiers from './concatClassModifiers.js'\n\nfunction modifyClass(className, modifiers) {\n  return concatClassModifiers(\n    className,\n    ...Object.keys(modifiers).filter((key) => modifiers[key])\n  )\n}\n\nexport default modifyClass\n","import React from 'react'\nimport Header from '../components/Header.js'\nimport useLayoutClass from '../hooks/useLayoutClass.js'\nimport modifyClass from '../helpers/modifyClass.js'\n\nfunction FullScreenLayout({ withHeader,  children }) {\n  useLayoutClass('full_screen_layout')\n  return (\n    <div className='full_screen_layout__wrapper'>\n      {withHeader && <Header />}\n      <div className={modifyClass('full_screen_layout__content', {'with_header': withHeader})}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default FullScreenLayout\n"],"sourceRoot":""}