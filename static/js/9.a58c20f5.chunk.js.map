{"version":3,"sources":["components/ContainerScroller.js","localServer/normalizers/normalizeAnime.js","pages/NotFoundPage.js","localServer/helpers/isObject.js","localServer/helpers/isLocaleStringObject.js","localServer/helpers/getLocaleString.js","localServer/helpers/notObjectNotArray.js","localServer/helpers/formatDataToLocalStrings.js","components/AnimeBox.js","components/AnimeBackground.js","components/EpisodeBox.js","components/AnimeEpisodes.js","localServer/getters/getRelatedAnimes.js","components/RelatedAnimes.js","localServer/getters/fetchAnimeById.js","pages/AnimeInfoPage.js","helpers/modifyClass.js","layouts/HomeLayout.js"],"names":["ContainerScroller","children","rest","containerRef","useRef","scrollerRef","useState","containerOffset","setContainerOffset","containerWidth","setContainerWidth","pinned","setPinned","handleScrollerScroll","elem","current","scrollWidth","offsetWidth","scrollLeft","updateContainerOffset","offsetLeft","scrollContainer","backwards","timeout","direction","offset","anchor","step","scrollToAnchor","oldScrollLeft","clearTimeout","setTimeout","Math","abs","useEffect","window","addEventListener","removeEventListener","className","ref","inheritPropClassName","style","minWidth","minHeight","includes","concatClassModifiers","width","onClick","icon","size","normalizeAnime","anime","lang","i18next","language","formatDataToLocalStrings","NotFoundPage","location","useLocation","url","isObject","A","isLocaleStringObject","value","kk","en","ru","getLocaleString","object","str","Object","keys","notObjectNotArray","Array","isArray","map","f","newObject","forEach","key","field","AnimeBox","to","id","backgroundImage","poster","name","AnimeBackground","isBlurred","props","modifyClass","src","alt","EpisodeBox","episode","animeId","episodeId","AnimeEpisodes","episodes","t","useTranslation","season","tab","setTab","selectedSeason","find","Nav","onSelect","activeKey","Item","eventKey","index","getRelatedAnimes","animes","filter","a","RelatedAnimes","title","setAnimes","fetchAnimeById","getAnimeById","AnimeInfoPage","useParams","setAnime","console","log","HomeLayout","logoImage","TransitionGroup","CSSTransition","classNames","shortInfo","ButtonToolbar","Button","componentClass","Link","color","Icon","IconButton","appearance","info","detail","label","modifiers","concat","stickyTransparent","useLayoutClass"],"mappings":"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","file":"static/js/9.a58c20f5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport inheritPropClassName from '../helpers/inheritPropClassName.js'\nimport { Icon } from 'rsuite'\nimport concatClassModifiers from '../helpers/concatClassModifiers.js'\n\nfunction ContainerScroller({ children, ...rest}) {\n  const containerRef = useRef()\n  const scrollerRef = useRef()\n  const [containerOffset, setContainerOffset] = useState(0)\n  const [containerWidth, setContainerWidth] = useState(0)\n  const [pinned, setPinned] = useState('none')\n\n  useEffect(() => {\n    updateContainerOffset()\n    window.addEventListener('resize', updateContainerOffset)\n    window.addEventListener('resize', handleScrollerScroll)\n    return () => {\n      window.removeEventListener('resize', updateContainerOffset)\n      window.removeEventListener('resize', handleScrollerScroll)\n    }\n  }, [containerRef])\n\n  useEffect(() => {\n    const elem = scrollerRef.current\n    setTimeout(() => {\n      handleScrollerScroll()\n    }, 100)\n    if (elem) {\n      elem.addEventListener('scroll', handleScrollerScroll)\n    }\n    return () => {\n      if (elem) {\n        elem.removeEventListener('scroll', handleScrollerScroll)\n      }\n    }\n  }, [scrollerRef])\n\n  function handleScrollerScroll() {\n    const elem = scrollerRef.current\n    if (elem) {\n      if (elem.scrollWidth - elem.offsetWidth === 0) {\n        setPinned('both')\n      }\n      else if (elem.scrollLeft === 0) {\n        setPinned('left')\n      } else if (elem.scrollLeft >= elem.scrollWidth - elem.offsetWidth) {\n        setPinned('right')\n      } else {\n        setPinned('nonee')\n      }\n    }\n  }\n\n  function updateContainerOffset() {\n    const elem = containerRef.current\n    if (elem) {\n      setContainerOffset(elem.offsetLeft)\n      setContainerWidth(elem.offsetWidth)\n    }\n  }\n\n  function scrollContainer(backwards) {\n    let timeout\n    return () => {\n      const elem = scrollerRef.current\n      if (elem) {\n        const direction = (-1 + (1 * !!backwards) * 2)\n        let offset = direction * containerWidth\n        offset -= (offset % containerOffset)\n        const anchor = (elem.scrollLeft + offset)\n        const delay = 10\n        const step = (direction * containerWidth) / (delay)\n        function scrollToAnchor(oldScrollLeft) {\n          clearTimeout(timeout)\n          timeout = setTimeout(() => {\n            if (Math.abs(elem.scrollLeft - anchor) > Math.abs(step)) {\n              elem.scrollLeft += step\n              if (elem.scrollLeft !== oldScrollLeft) {\n                scrollToAnchor(elem.scrollLeft)\n              }\n            } else {\n              elem.scrollLeft = anchor\n            }\n          }, delay)\n        }\n        scrollToAnchor()\n      }\n    }\n  }\n\n  return (\n    <div className='container_scroller__wrapper'>\n      <div className='container' ref={containerRef}/>\n      <div className={inheritPropClassName(rest, 'container_scroller')} ref={scrollerRef}>\n        <div style={{minWidth: containerOffset, minHeight: 1}} />\n        {children}\n        <div style={{minWidth: containerOffset, minHeight: 1}} />\n      </div>\n      {!['left', 'both'].includes(pinned) && (\n        <button className={concatClassModifiers('container_scroller__button', 'left')} style={{width: containerOffset, minHeight: 1}} onClick={scrollContainer()}>\n          <Icon icon='angle-left' size='3x' />\n        </button>\n      )}\n      {!['right', 'both'].includes(pinned) && (\n        <button className={concatClassModifiers('container_scroller__button', 'right')} style={{width: containerOffset, minHeight: 1}} onClick={scrollContainer(true)}>\n          <Icon icon='angle-right' size='3x' />\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default ContainerScroller\n","import formatDataToLocalStrings from '../helpers/formatDataToLocalStrings.js'\nimport i18next from 'i18next'\n\nfunction normalizeAnime(anime) {\n  const lang = i18next.language\n  return formatDataToLocalStrings(anime, lang)\n}\n\nexport default normalizeAnime\n","import React from 'react'\nimport { useLocation } from 'react-router'\n\nfunction NotFoundPage() {\n  const location = useLocation()\n  return (\n    <>\n      <h1>404 - Not Found</h1>\n      <h2>\n        <i>{location.url}</i> page not found\n      </h2>\n    </>\n  )\n}\n\nexport default NotFoundPage\n","function isObject(A) {\n  return  (typeof A === \"object\" || typeof A === 'function') && (A !== null)\n}\n\nexport default isObject\n","import isObject from './isObject.js'\n\nfunction isLocaleStringObject(value) {\n  return isObject(value) && (value.kk || value.en || value.ru)\n}\n\nexport default isLocaleStringObject\n","function getLocaleString(object, lang = 'ru') {\n  const str = object[lang]\n  if (str) {\n    return str\n  }\n  return object[Object.keys(object)[0]]\n}\n\nexport default getLocaleString\n","import isObject from './isObject.js'\n\nfunction notObjectNotArray(value) {\n  return !isObject(value) && !Array.isArray(value)\n}\n\nexport default notObjectNotArray\n","import isLocaleStringObject from './isLocaleStringObject.js'\nimport getLocaleString from './getLocaleString.js'\nimport isObject from './isObject.js'\nimport notObjectNotArray from './notObjectNotArray.js'\n\nfunction formatDataToLocalStrings(object, lang = 'ru') {\n  if (notObjectNotArray(object)) {\n    return object\n  }\n  if (Array.isArray(object)) {\n    return object.map((f) => formatDataToLocalStrings(f, lang))\n  }\n  const newObject = {...object}\n  Object.keys(object).forEach((key) => {\n    const field = object[key]\n    if (isLocaleStringObject(field)) {\n      newObject[key] = getLocaleString(field, lang)\n    } else if (isObject(field) || Array.isArray(field)) {\n      newObject[key] = formatDataToLocalStrings(field, lang)\n    } else {\n      newObject[key] = field\n    }\n  })\n  return newObject\n}\n\nexport default formatDataToLocalStrings\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction AnimeBox({ anime }) {\n  return (\n    <Link className='anime_box' to={'/anime/' + anime.id}>\n      <div className='anime_box__image' style={{backgroundImage: `url(${anime.poster})`}} />\n      <div className='anime_box__heading'>\n        {anime.name}\n      </div>\n    </Link>\n  )\n}\n\nexport default AnimeBox\n","import React from 'react'\nimport inheritPropClassName from '../helpers/inheritPropClassName.js'\nimport modifyClass from '../helpers/modifyClass.js'\n\nfunction AnimeBackground({anime, isBlurred, ...props}) {\n\n  return (\n    <div className={inheritPropClassName(props, modifyClass('anime_background', {'is_blurred': isBlurred}))}>\n      <div className=\"anime_background__shadow\" />\n      <div className=\"anime_background__content\">\n        {anime.backgroundImage && <img src={anime.backgroundImage} alt='' />}\n      </div>\n    </div>\n  )\n}\n\nexport default AnimeBackground\n","import { Link } from 'react-router-dom'\nimport React from 'react'\n\nfunction EpisodeBox({ episode }) {\n  return (\n    <Link className='anime_box' to={`/watch/${episode.animeId}?episode=${episode.episodeId}`}>\n      <div className='anime_box__image' style={{backgroundImage: `url(${episode.poster})`}} />\n      <div className='anime_box__heading'>\n        {episode.name}\n      </div>\n    </Link>\n  )\n}\n\nexport default EpisodeBox\n","import React, { useState } from 'react'\nimport { Nav } from 'rsuite'\nimport inheritPropClassName from '../helpers/inheritPropClassName.js'\nimport ContainerScroller from './ContainerScroller.js'\nimport EpisodeBox from './EpisodeBox.js'\nimport { useTranslation } from 'react-i18next'\n\nfunction AnimeEpisodes({ episodes, ...props }) {\n  const { t } = useTranslation()\n  const [tab, setTab] = useState(episodes[0].season)\n  const selectedSeason = episodes.find((season) => season.season === tab)\n  return (\n    <div className={inheritPropClassName(props,'anime_episodes')}>\n      <div className=\"container\">\n        <h2 className='anime_episodes__heading'>{t('episodes')}</h2>\n        <div className=\"d-flex align-items-center my-3 anime_episodes__seasons\">\n          <span className='mr-3'>{t('seasons')}</span>\n          <Nav onSelect={setTab} activeKey={tab} className='nav_tabs '>\n            {episodes.map((season) => (<Nav.Item key={season.season} eventKey={season.season}>{season.season}</Nav.Item>))}\n          </Nav>\n        </div>\n      </div>\n      {selectedSeason && (\n        <ContainerScroller className='anime_box__row'>\n          {selectedSeason.episodes.map((episode, index) => <EpisodeBox key={index} episode={episode} />)}\n        </ContainerScroller>\n      )}\n    </div>\n  )\n}\n\nexport default AnimeEpisodes\n","import animes from '../localDatabase/animes.js'\nimport normalizeAnime from '../normalizers/normalizeAnime.js'\n\nfunction getRelatedAnimes(animeId) {\n  return [\n    ...animes.filter((a) => a.id !== animeId),\n    ...animes.filter((a) => a.id !== animeId),\n    ...animes.filter((a) => a.id !== animeId),\n  ].map(normalizeAnime)\n}\n\nexport default getRelatedAnimes\n","import ContainerScroller from './ContainerScroller.js'\nimport AnimeBox from './AnimeBox.js'\nimport React, { useEffect, useState } from 'react'\nimport getRelatedAnimes from '../localServer/getters/getRelatedAnimes.js'\n\nfunction RelatedAnimes({title = 'Похожие аниме', animeId, ...props}) {\n  const [animes, setAnimes] = useState([])\n\n  useEffect(() => {\n    setAnimes(getRelatedAnimes(animeId))\n  }, [animeId])\n\n  return (\n    <div {...props}>\n      <div className=\"container\">\n        <div className='mb-4 d-flex align-items-center'>\n          <h2>{title}</h2>\n        </div>\n      </div>\n      <ContainerScroller className=\"anime_box__row\">\n        {animes.map((anime, index) => (\n          <AnimeBox key={index} anime={anime} />\n        ))}\n      </ContainerScroller>\n    </div>\n  )\n}\n\nexport default RelatedAnimes\n","import normalizeAnime from '../normalizers/normalizeAnime.js'\nimport { getAnimeById } from '../localDatabase/animes.js'\n\nfunction fetchAnimeById(id) {\n  return normalizeAnime(getAnimeById(id))\n}\n\nexport default fetchAnimeById\n","import React, { useEffect, useState } from 'react'\nimport HomeLayout from '../layouts/HomeLayout.js'\nimport AnimeBackground from '../components/AnimeBackground.js'\nimport modifyClass from '../helpers/modifyClass.js'\nimport { Button, ButtonToolbar, Icon, IconButton, Nav } from 'rsuite'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport AnimeEpisodes from '../components/AnimeEpisodes.js'\nimport NotFoundPage from './NotFoundPage.js'\nimport { Link } from 'react-router-dom'\nimport { useParams } from 'react-router'\nimport RelatedAnimes from '../components/RelatedAnimes.js'\nimport { useTranslation } from 'react-i18next'\nimport fetchAnimeById from '../localServer/getters/fetchAnimeById.js'\n\nconst TAB_MAIN = 'TAB_MAIN'\nconst TAB_INFO = 'TAB_INFO'\n\nfunction AnimeInfoPage() {\n  const { t } = useTranslation()\n  const animeId = useParams().id\n  const [anime, setAnime] = useState()\n\n  const [tab, setTab] = useState(TAB_MAIN)\n\n  useEffect(() => {\n    setAnime(fetchAnimeById(animeId))\n  }, [animeId])\n\n  if (!anime) {\n    return <NotFoundPage />\n  }\n\n  console.log(anime)\n  return (\n    <HomeLayout>\n      <div className=\"anime_info\">\n        <AnimeBackground anime={anime} isBlurred={tab!==TAB_MAIN} />\n        <div className=\"container\">\n          <Nav activeKey={tab} onSelect={setTab} className='nav_tabs'>\n            <Nav.Item eventKey={TAB_MAIN}>{t('about anime')}</Nav.Item>\n            <Nav.Item eventKey={TAB_INFO}>{t('details')}</Nav.Item>\n          </Nav>\n          <div className={modifyClass('anime_info__heading', {'logo_visible': anime.logoImage, 'shorten': tab!==TAB_MAIN})}>\n            {anime.logoImage ? (\n              <img src={anime.logoImage} alt={anime.name} />\n            ) : (\n              <h1>{anime.name}</h1>\n            )}\n          </div>\n        </div>\n        <TransitionGroup>\n          <CSSTransition classNames='scale'\n                         key={tab}\n                         timeout={150}\n          >\n            <div className='container'>\n            {tab === TAB_MAIN && (\n              <>\n                <p className='anime_info__description'>{anime.shortInfo}</p>\n                <div className=\"d-flex wide_slide__buttons\">\n                  <ButtonToolbar>\n                    <Button componentClass={Link} to={'/watch/' + anime.id} className='btn-scale' color='red' size='lg'><Icon icon='play' className='mr-2'/> {t('watch')}</Button>\n                    <IconButton className='btn-scale' appearance='subtle' size='lg' icon={<Icon icon='heart' />} />\n                  </ButtonToolbar>\n                </div>\n              </>\n            )}\n            {tab === TAB_INFO && (\n              <div className='anime_info__info'>\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <p className='anime_info__full_description'>{anime.info}</p>\n                  </div>\n                  {anime.detail && (\n                    <div className=\"anime_info__details col-lg-6\">\n                      {\n                        anime.detail.map((detail, index) => (\n                          <div className='anime_info__detail' key={index}>\n                            <span className=\"anime_info__label\">{detail.label}</span>\n                            <span className='anime_info__value'>{detail.value}</span>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n      {anime.episodes && (<AnimeEpisodes episodes={anime.episodes} className='my-5' />)}\n      <RelatedAnimes title={t('similar anime')} animeId={animeId} className='my-5' />\n    </HomeLayout>\n  )\n}\n\nexport default AnimeInfoPage\n","import concatClassModifiers from './concatClassModifiers.js'\n\nfunction modifyClass(className, modifiers) {\n  return concatClassModifiers(\n    className,\n    ...Object.keys(modifiers).filter((key) => modifiers[key])\n  )\n}\n\nexport default modifyClass\n","import React from 'react'\nimport Header from '../components/Header.js'\nimport useLayoutClass from '../hooks/useLayoutClass.js'\n\nfunction HomeLayout({ stickyTransparent, children }) {\n  useLayoutClass('home_layout')\n  return (\n    <>\n      <Header stickyTransparent={stickyTransparent} />\n      {children}\n      <footer />\n    </>\n  )\n}\n\nexport default HomeLayout\n"],"sourceRoot":""}